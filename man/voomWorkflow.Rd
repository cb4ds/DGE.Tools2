% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/voomWorkflow.R
\name{voomWorkflow}
\alias{voomWorkflow}
\title{Run a typical voom workflow}
\usage{
voomWorkflow(
  dgeObj,
  formula,
  designMatrixName,
  dupCorBlock,
  annotationFile,
  proteinCodingOnly = FALSE,
  sampleFraction = 0.5,
  ...
)
}
\arguments{
\item{dgeObj}{A class DGEobj with counts, gene annotation, and sample
annotation.}

\item{formula}{A text representation of the desired formula (input of class
character, not formula.)}

\item{designMatrixName}{User defined name for the design matrix.}

\item{dupCorBlock}{A blocking vector to define which samples belong to the
same subject to be used with the duplicateCorrelation function.}

\item{annotationFile}{Text file of key/value pairs to populate DGEobj
attributes. (Optional but highly advised)}

\item{proteinCodingOnly}{Set to TRUE to keep only protein coding genes.
(Default = TRUE)}

\item{sampleFraction}{Fraction of samples that must meet intensity thresholds
to keep a gene. (Default = 0.5)}

\item{...}{Additional named arguments passed to the low intensity filter
function to define the desired intensity filter type (see ?lowIntFilter). Settable
arguments for low intensity filtering are: fracThreshold (Default = 0.5),
countThreshold, fpkThreshold, zfpkmThreshold, tpmThreshold.  countThreshold plus one
other argument can be used.  If no arguments supplied here, the
following defaults apply the following: fracThreshold = 0.5, countThreshold = 10,
fpkThreshold = 5. To disable intensity filtering use sampleFraction = 0.}
}
\value{
A DGEobj with analysis results added.
}
\description{
This function runs several steps in the RNA-Seq pipeline in one fell swoop.
It supports duplicateCorrelation a blocking vector is provided. It
includes low intensity filtering, filtering for protein coding genes, and
filters out zero effective length genes (genes shorter than library size).
Then it runs TMM normalization, voomWithQualityWeights, lmFit, and eBayes.
}
\details{
To incorporate SVA analysis, run SVA first and then add the SVA
variables to the design table. After those steps, voomWorkflow can be run.

After running this function, define the contrasts and execute runContrast to
complete DGE calculations.
}
\examples{
\dontrun{
   myDGEobj <- voomWorkflow(myDGEobj,
                            formula = "~ 0 + ReplicateGroup",
                            designMatrixName = "ReplicateGroup",
                            annotationFile = "MyProjectName.txt",
                            proteinCodingOnly = TRUE)
}

}
